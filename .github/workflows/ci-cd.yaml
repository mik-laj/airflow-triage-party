---
name: CI Build
on:
  schedule:
    - cron: '28 0 * * 1'
  push:
    branches: ['ci-cd']
  pull_request:
    branches: ['master']

env:
  TF_IN_AUTOMATION: true

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout ${{ github.ref }} ( ${{ github.sha }} )"
        uses: actions/checkout@v2
        with:
          submodules: recursive
          lfs: true

      - name: "Setup Google SDK"
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        if: ${{ github.event_name == 'push' }}
        with:
          version: '307.0.0'
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - run: gcloud info
        if: ${{ github.event_name == 'push' }}

      - name: "Setup Terraaform"
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.12.28

      - name: Terraform Init
        if: github.event_name == 'pull_request'
        run: terraform init -backend=false
        working-directory: terraform

      - name: Terraform Init
        if: github.event_name == 'push'
        run: terraform init
        working-directory: terraform

      - name: Terraform Validate
        run: terraform validate -no-color
        working-directory: terraform

      - name: Terraform Plan
        if: github.event_name == 'push'
        run: ../log_stream.sh plan terraform plan -no-color
        env: 
          TF_VAR_github_token: ${{ github.token }}
        working-directory: terraform

      - name: Build image
        if: github.event_name == 'pull_request'
        run: ./build.sh
        env:
          IMAGE_TAG: ${{ github.sha }}
          PROJECT_ID: github-action

      - name: Build and publish image
        if: github.event_name == 'push'
        run: |
          gcloud auth configure-docker
          ./build.sh
          ./push.sh
        env: 
          IMAGE_TAG: ${{ github.sha }}

      - name: Terraform Apply
        if: github.event_name == 'push'
        run: |
          ../log_stream.sh apply terraform apply -auto-approve
          echo "Terraform outputs:"
          terraform output
        working-directory: terraform
        env: 
          TF_VAR_docker_image_tag: ${{ github.sha }}
          TF_VAR_github_token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
